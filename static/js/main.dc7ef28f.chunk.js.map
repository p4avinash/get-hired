{"version":3,"sources":["components/developer-card/Card.jsx","components/developer-cardlist/Cardlist.jsx","components/search-box/Searchbar.jsx","components/scroll/Scroll.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Card","data","className","src","avatar","alt","width","height","title","name","style","cursor","country","href","githubUsername","target","linkedInLink","Cardlist","map","developer","key","serialNumber","Searchbar","onSearchChange","onChange","type","placeholder","Scroll","props","overflowY","children","email","particlesOptions","particles","number","value","density","enable","value_area","line_linked","shadow","color","App","event","setState","searchbox","state","filteredDevelopers","this","filter","toLowerCase","includes","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc7ef28f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ data }) => {\r\n  return (\r\n    <div className=\"container tc dib pa3 ma3 shadow-5 grow \">\r\n      <div className=\"avatar\">\r\n        <img src={data.avatar} alt=\"avatar\" width=\"150px\" height=\"150px\" />\r\n      </div>\r\n      <div className=\"texts\">\r\n        <h4>{data.title}</h4>\r\n        <p>{data.name}</p>\r\n        <p>\r\n          <i style={{ cursor: \"not-allowed\" }} className=\"fa fa-map-marker\"></i>\r\n          &nbsp;&nbsp;\r\n          {`${data.country}`}\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div className=\"socialLinks\">\r\n        <a href={`https://github.com/${data.githubUsername}`} target=\"blank\">\r\n          <i className=\"fa fa-github\" />\r\n        </a>\r\n\r\n        <a href={data.linkedInLink} target=\"blank\">\r\n          <i className=\"fa fa-linkedin\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../developer-card/Card\";\r\n\r\nconst Cardlist = ({ data }) => {\r\n  return (\r\n    <div>\r\n      {data.map((developer) => (\r\n        <Card key={developer.serialNumber} data={developer} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\n\r\nimport \"./Searchbar.css\";\r\n\r\nconst Searchbar = ({ onSearchChange }) => {\r\n  return (\r\n    <div className=\"tc\">\r\n      <input\r\n        onChange={onSearchChange}\r\n        className=\"tc pa2 ma3 search\"\r\n        type=\"search\"\r\n        placeholder=\"search developers\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: \"scroll\", width: \"auto\", height: \"550px\" }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","export const data = [\r\n  {\r\n    serialNumber: 1,\r\n    avatar: `https://avatars3.githubusercontent.com/u/46785501?s=460&u=0567e45b9f1b58fd29583c193024122352bffd75&v=4`,\r\n    name: `Avinash Kumar`,\r\n    title: \"Web Developer\",\r\n    email: \"p4avinashkumar@gmail.com\",\r\n    githubUsername: `p4avinash`,\r\n    linkedInLink: `https://www.linkedin.com/in/p4avinash/`,\r\n    country: \"India\",\r\n  },\r\n  {\r\n    serialNumber: 2,\r\n    avatar: `https://avatars0.githubusercontent.com/u/59368489?s=460&u=9f351deac8311e2f979d9b9df7cb9d17e572c0f3&v=4`,\r\n    name: `Denisa`,\r\n    title: \"Web Developer\",\r\n    email: \"denisa@gmail.com\",\r\n    githubUsername: `denisa`,\r\n    linkedInLink: `https://www.linkedin.com/in/andron-denisa-b2839b168/`,\r\n    country: \"Romania\",\r\n  },\r\n  {\r\n    serialNumber: 3,\r\n    avatar: `https://avatars1.githubusercontent.com/u/41805354?s=460&u=10044baf1572e5ce0657bf905a13c4c741a20f1b&v=4`,\r\n    name: `Ayush Raj Anand`,\r\n    title: \"Android Developer\",\r\n    email: \"f4ayush@gmail.com\",\r\n    githubUsername: `f4ayush`,\r\n    linkedInLink: `https://www.linkedin.com/in/ayush-raj-anand-3647aa11a/`,\r\n    country: \"India\",\r\n  },\r\n  {\r\n    serialNumber: 4,\r\n    avatar: `https://avatars0.githubusercontent.com/u/23546795?s=460&u=ad6e56ca7ccef7ce7d0d5c3156abf6a6dbbe13e9&v=4`,\r\n    name: `Raubinsh Arya`,\r\n    title: \"Web Developer\",\r\n    email: \"raubinsharya@gmail.com\",\r\n    githubUsername: `raubinsharya`,\r\n    linkedInLink: `https://www.linkedin.com/in/raubinsharya/`,\r\n    country: \"India\",\r\n  },\r\n  {\r\n    serialNumber: 5,\r\n    avatar: `https://avatars0.githubusercontent.com/u/64686685?s=460&u=2c04fb200727be2b4f1250bded86f1dc41bc5ec5&v=4`,\r\n    name: `Rajnish Kumar`,\r\n    title: \"Web Developer\",\r\n    email: \"a4rajnish@gmail.com\",\r\n    githubUsername: `a4rajnish`,\r\n    linkedInLink: `https://www.linkedin.com/in/rajnish-kumar-ba157a116/`,\r\n    country: \"India\",\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\nimport Cardlist from \"./components/developer-cardlist/Cardlist\";\nimport Searchbar from \"./components/search-box/Searchbar\";\nimport Scroll from \"./components/scroll/Scroll\";\n\nimport { data } from \"./data\";\n\nimport \"./App.css\";\n\nimport Particles from \"react-particles-js\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n      line_linked: {\n        shadow: {\n          enable: true,\n          color: \"#3CA9D1\",\n        },\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchbox: \"\",\n      data: data,\n    };\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchbox: event.target.value });\n  };\n\n  render() {\n    const filteredDevelopers = this.state.data.filter(\n      (developer) =>\n        developer.name\n          .toLowerCase()\n          .includes(this.state.searchbox.toLowerCase()) ||\n        developer.title.toLowerCase().includes(this.state.searchbox)\n    );\n    return (\n      <div className=\"tc\">\n        <Particles className=\"particle\" params={particlesOptions} />\n        <Searchbar onSearchChange={this.onSearchChange} />\n        <Scroll>\n          <Cardlist data={filteredDevelopers} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}